2020-11-02 08:58:01 dingtalk.py[dingtalk,116] DEBUG "text类型：{'msgtype': 'text', 'at': {'isAtAll': '18207420715'}, 'text': {'content': 'test'}}"
2020-11-02 08:58:02 connectionpool.py[connectionpool,943] DEBUG "Starting new HTTPS connection (1): oapi.dingtalk.com:443"
2020-11-02 08:58:02 connectionpool.py[connectionpool,442] DEBUG "https://oapi.dingtalk.com:443 "POST /robot/send?access_token=223dce65a3640d336875de3ccb6c58fa684e1609ff68a4d131d9083bf368380c&timestamp=1604278681996&sign=YF8ka3YDD6fB3jDFK6ewM4mDZeaw71eQ14suKQO1qwg%3D HTTP/1.1" 200 None"
2020-11-02 08:58:02 dingtalk.py[dingtalk,169] DEBUG "发送结果：{'errcode': 0, 'errmsg': 'ok'}"
2020-11-02 08:58:33 dingtalk.py[dingtalk,116] DEBUG "text类型：{'msgtype': 'text', 'at': {'isAtAll': '18207420715'}, 'text': {'content': 'test'}}"
2020-11-02 08:58:33 connectionpool.py[connectionpool,943] DEBUG "Starting new HTTPS connection (1): oapi.dingtalk.com:443"
2020-11-02 08:58:33 connectionpool.py[connectionpool,442] DEBUG "https://oapi.dingtalk.com:443 "POST /robot/send?access_token=223dce65a3640d336875de3ccb6c58fa684e1609ff68a4d131d9083bf368380c&timestamp=1604278713631&sign=tSnsgIrxnkOVIHUSpol0fYmVGOFtCTZ9lhFqiSHXbXY%3D HTTP/1.1" 200 None"
2020-11-02 08:58:33 dingtalk.py[dingtalk,169] DEBUG "发送结果：{'errcode': 0, 'errmsg': 'ok'}"
2020-11-02 08:59:04 dingtalk.py[dingtalk,116] DEBUG "text类型：{'msgtype': 'text', 'at': {'isAtAll': '18207420715'}, 'text': {'content': 'test'}}"
2020-11-02 08:59:04 connectionpool.py[connectionpool,943] DEBUG "Starting new HTTPS connection (1): oapi.dingtalk.com:443"
2020-11-02 08:59:04 connectionpool.py[connectionpool,442] DEBUG "https://oapi.dingtalk.com:443 "POST /robot/send?access_token=223dce65a3640d336875de3ccb6c58fa684e1609ff68a4d131d9083bf368380c&timestamp=1604278744286&sign=NNdFRbiu5sByQdMYdASzbgKIghZt3GTnRh2rbtWPbPU%3D HTTP/1.1" 200 None"
2020-11-02 08:59:04 dingtalk.py[dingtalk,169] DEBUG "发送结果：{'errcode': 0, 'errmsg': 'ok'}"
2020-11-02 08:59:04 dingtalk.py[dingtalk,119] DEBUG "Dingtalk send success"
2020-11-02 18:35:33 ruleparser.py[ruleparser,64] DEBUG "ruleParser: cpuUsage_901 is not exists."
2020-11-02 18:35:43 ruleparser.py[ruleparser,64] DEBUG "ruleParser: cpuUsage_901 is not exists."
2020-11-02 18:35:54 ruleparser.py[ruleparser,64] DEBUG "ruleParser: cpuUsage_901 is not exists."
2020-11-02 18:36:02 ruleparser.py[ruleparser,64] DEBUG "ruleParser: cpuUsage_901 is not exists."
2020-11-15 18:26:50 ruleparser.py[ruleparser,104] ERROR "ruleParser: 'idc'"
2020-11-15 18:27:35 ruleparser.py[ruleparser,104] ERROR "ruleParser: 'idc'"
2020-11-15 18:32:53 ruleparser.py[ruleparser,104] ERROR "ruleParser: 'idc'"
2020-11-15 18:45:54 ruleparser.py[ruleparser,104] ERROR "ruleParser: 'idc'"
2020-11-15 18:46:39 ruleparser.py[ruleparser,69] DEBUG "ruleParser: cpuUsage_70 is not exists."
2020-11-15 18:46:46 ruleparser.py[ruleparser,69] DEBUG "ruleParser: cpuUsage_70 is not exists."
2020-11-15 18:48:32 ruleparser.py[ruleparser,69] DEBUG "ruleParser: cpuUsage_70 is not exists."
2020-11-15 18:48:36 ruleparser.py[ruleparser,69] DEBUG "ruleParser: cpuUsage_70 is not exists."
2020-11-15 18:49:28 ruleparser.py[ruleparser,104] ERROR "ruleParser: 'idc'"
2020-11-15 18:49:54 ruleparser.py[ruleparser,104] ERROR "ruleParser: 'idc'"
2020-11-15 18:51:05 ruleparser.py[ruleparser,104] ERROR "ruleParser: 'idc'"
2020-11-15 18:51:14 ruleparser.py[ruleparser,104] ERROR "ruleParser: 'idc'"
2020-11-15 18:54:21 ruleparser.py[ruleparser,104] ERROR "ruleParser: 'idc'"
2020-11-15 18:54:21 ruleparser.py[ruleparser,184] ERROR "ruleparser: node is not exists!"
2020-11-15 18:54:21 ruleparser.py[ruleparser,190] DEBUG "Notexists: the count of same message is 0"
2020-11-15 18:54:21 ruleparser.py[ruleparser,104] ERROR "ruleParser: 'idc'"
2020-11-15 18:56:41 ruleparser.py[ruleparser,104] ERROR "ruleParser: 'idc'"
2020-11-15 18:57:02 ruleparser.py[ruleparser,104] ERROR "ruleParser: 'idc'"
2020-11-15 18:57:02 ruleparser.py[ruleparser,184] ERROR "ruleparser: node is not exists!"
2020-11-15 18:57:02 ruleparser.py[ruleparser,190] DEBUG "Notexists: the count of same message is 0"
2020-11-15 18:57:02 ruleparser.py[ruleparser,104] ERROR "ruleParser: 'idc'"
2020-11-15 18:58:48 ruleparser.py[ruleparser,104] ERROR "ruleParser: 'idc'"
2020-11-15 18:59:19 ruleparser.py[ruleparser,106] ERROR "ruleParser: 'idc'"
2020-11-15 19:00:11 ruleparser.py[ruleparser,106] ERROR "ruleParser: 'idc'"
2020-11-15 19:00:49 ruleparser.py[ruleparser,107] ERROR "ruleParser: 'idc'"
2020-11-15 19:02:08 ruleparser.py[ruleparser,107] ERROR "ruleParser: 'idc'"
2020-11-15 19:05:22 ruleparser.py[ruleparser,109] ERROR "ruleParser: ['  File "e:/work/Program/fishalert/ruleparser.py", line 103, in match\n    objExp = objExp.format(**self.msgDict)\n']"
2020-11-15 19:05:49 ruleparser.py[ruleparser,109] ERROR "ruleParser: 'idc'"
2020-11-15 19:06:04 ruleparser.py[ruleparser,109] ERROR "ruleParser: <class 'KeyError'>"
2020-11-15 19:06:37 ruleparser.py[ruleparser,109] ERROR "ruleParser: <class 'KeyError'> 'idc'"



2020-11-15 19:25:01 ruleparser.py[ruleparser,109] ERROR "ruleParser: 'idc' is not exists in msgDict"
2020-11-15 19:28:56 ruleparser.py[ruleparser,190] ERROR "ruleparser: node is not exists!"
2020-11-15 19:28:57 ruleparser.py[ruleparser,196] DEBUG "Notexists: the count of same message is 0"
2020-11-15 19:30:37 ruleparser.py[ruleparser,186] ERROR "ruleparser: node is not exists!"
2020-11-15 19:30:37 ruleparser.py[ruleparser,192] DEBUG "Notexists: the count of same message is 0"
